dif_ori <- diff(temp, differences = 1)
plot(dif_ori, ylab = "dif2BoxCox")
temp=train.ts^2
dif_ori <- diff(train.ts, differences = 1)
plot(dif_ori, ylab = "dif2BoxCox")
dif_ori <- diff(train.ts, differences = 1)
plot(dif_ori, ylab = "dif2BoxCox")
dif_ori <- diff(train.ts^2, differences = 1)
plot(dif_ori, ylab = "dif2BoxCox")
acf(dif_ori)
dif_ori2 <- diff(train.ts, differences = 1)
dif_ori2 <- diff(train.ts, differences = 1)
dif_ori2 <- diff(train.ts, differences = 1)
dif_ori2 <- dif_ori2^2
plot(dif_ori2, ylab = "dif2BoxCox")
acf(dif_ori2)
dif_ori2 <- diff(train.ts, differences = 1)
acf(dif_ori2)
plot(dif_ori2, ylab = "dif2BoxCox")
dif_ori2 <- diff(train.ts, differences = 2)
acf(dif_ori2)
dif_ori2 <- dif_ori2^2
acf(dif_ori2)
dif_ori <- diff(train.ts^2, differences = 1)
plot(dif_ori, ylab = "dif2BoxCox")
acf(diff_ori)
dif_ori2 <- diff(train.ts, differences = 2)
dif_ori2 <- diff(train.ts, differences = 1)
acf(dif_ori2)
dif_ori2 <- dif_ori2^2
plot(dif_ori2, ylab = "dif2BoxCox")
acf(dif_ori2)
pacf(dif_ori2)
dif_ori <- diff(train.ts^2, differences = 1)
plot(dif_ori, ylab = "dif2BoxCox")
dif_ori <- diff(train.ts^2, differences = 1)
plot(dif_ori, ylab = "dif2BoxCox")
acf(dif_ori)
acf(dif_ori)
dif_ori <- diff(train.ts^2, differences = 2)
plot(dif_ori, ylab = "dif2BoxCox")
acf(dif_ori)
dif_ori <- diff(train.ts^2, differences = 1)
plot(dif_ori, ylab = "dif2BoxCox")
dif_ori <- diff(train.ts^2, differences = 1)
plot(dif_ori, ylab = "dif2BoxCox")
dif_ori <- diff(train.ts^2, differences = 1)
plot(dif_ori, ylab = "dif2BoxCox")
acf(dif_ori)
pacf(dif_ori) #
eacf(dif_ori)
model1.da=Arima(dif_ori, order=c(0,1,1),method="ML")
summary(model1.da) #AIC=6242.44
lmtest::coeftest(model1.da) #seluruh parameter signifikan
model2.da=Arima(train.difcox2, order=c(1,1,0),method="ML")
model2.da=Arima(dif_ori, order=c(1,1,0),method="ML")
summary(model2.da) #AIC=6453.18
model2.da=Arima(dif_ori, order=c(1,1,0),method="ML")
summary(model2.da) #AIC=6723.63
lmtest::coeftest(model2.da) #seluruh parameter signifikan
#ARIMA(2,2,2)
model1.of=Arima(dif_ori, order=c(1,1,1),method="ML")
summary(model1.of) #AIC=
model2.of=Arima(dif_ori, order=c(0,1,2),method="ML")
summary(model2.of) #AIC=
lmtest::coeftest(model1.of) #Seluruh parameter signifikan
lmtest::coeftest(model2.of) #Seluruh parameter signifikan
lmtest::coeftest(model1.of) #Seluruh parameter signifikan
lmtest::coeftest(model2.of) #Seluruh parameter signifikan
sisaan.da <- model2.of$residuals
#1) Sisaan Menyebar Normal
ks.test(sisaan.da,"pnorm")
#Sisaan tidak menyebar normal
#2) Sisaan saling bebas/tidak ada autokorelasi
Box.test(sisaan.da, type = "Ljung")
#Sisaan saling bebas
#3) Sisaan homogen
Box.test((sisaan.da)^2, type = "Ljung")
#Ragam sisaan tidak homogen (heterogen)
#4) Nilai tengah sisaan sama dengan nol
t.test(sisaan.da, mu = 0, conf.level = 0.95)
#Nilai tengah sisaan sama dgn 0
#Eksplorasi
sisaan.da <- model2.of$residuals
par(mfrow=c(2,2))
qqnorm(sisaan.da)
qqline(sisaan.da, col = "blue", lwd = 2)
plot(c(1:length(sisaan.da)),sisaan.da)
acf(sisaan.da)
pacf(sisaan.da)
par(mfrow = c(1,1))
#1) Sisaan Menyebar Normal
ks.test(sisaan.da,"pnorm")
#Sisaan tidak menyebar normal
#2) Sisaan saling bebas/tidak ada autokorelasi
Box.test(sisaan.da, type = "Ljung")
#Sisaan tidak saling bebas
#3) Sisaan homogen
Box.test((sisaan.da)^2, type = "Ljung")
#Ragam sisaan tidak homogen (heterogen)
#4) Nilai tengah sisaan sama dengan nol
t.test(sisaan.da, mu = 0, conf.level = 0.95)
#Nilai tengah sisaan sama dgn 0
#1) Sisaan Menyebar Normal
ks.test(sisaan.da,"pnorm")  #tak tolak H0 > sisaan menyebar normal
#2) Sisaan saling bebas/tidak ada autokorelasi
Box.test(sisaan.da, type = "Ljung")  #tak tolak H0 > sisaan saling bebas
#3) Sisaan homogen
Box.test((sisaan.da)^2, type = "Ljung")  #tak tolak H0 > sisaan homogen
#3) Sisaan homogen
Box.test((sisaan.da)^2, type = "Ljung")  #tak tolak H0 > sisaan homogen
#4) Nilai tengah sisaan sama dengan nol
t.test(sisaan.da, mu = 0, conf.level = 0.95)  #tak tolak h0 > nilai tengah sisaan sama dengan 0
dif_ori2 <- diff(train.ts, differences = 1)
acf(dif_ori2)
dif_ori2 <- dif_ori2^2
plot(dif_ori2, ylab = "dif2BoxCox")
acf(dif_ori2)
pacf(dif_ori2)
acf(dif_ori) #ARIMA(0,1,1)
pacf(dif_ori) #ARIMA(1,1,0)
eacf(dif_ori)
acf(dif_ori2) #ARIMA(0,1,1)
pacf(dif_ori2) #ARIMA(1,1,0)
eacf(dif_ori2)
dif_ori <- diff(train.ts^2, differences = 1)
plot(dif_ori, ylab = "dif2BoxCox")
dif_ori2 <- diff(train.ts, differences = 1)
acf(dif_ori2)
dif_ori2 <- dif_ori2^2
plot(dif_ori2, ylab = "dif2BoxCox")
acf(dif_ori2)
pacf(dif_ori2)
acf(dif_ori) #ARIMA(0,1,1)
pacf(dif_ori) #ARIMA(1,1,0)
eacf(dif_ori)
acf(dif_ori2) #ARIMA(0,1,1)
pacf(dif_ori2) #ARIMA(3,1,0)
eacf(dif_ori2) #ARIMA(2,1,3)
model1.db=Arima(dif_ori2, order=c(0,1,1),method="ML")
summary(model1.da) #AIC=6558.37
lmtest::coeftest(model1.da) #seluruh parameter signifikan
model2.db=Arima(dif_ori2, order=c(3,1,0),method="ML")
summary(model2.da) #AIC=6723.63
lmtest::coeftest(model2.da) #seluruh parameter signifikan
model1.db=Arima(dif_ori2, order=c(0,1,1),method="ML")
summary(model1.db) #AIC=6558.37
lmtest::coeftest(model1.db) #seluruh parameter signifikan
model2.db=Arima(dif_ori2, order=c(3,1,0),method="ML")
summary(model2.db) #AIC=6723.63
lmtest::coeftest(model2.db) #seluruh parameter signifikan
model3.db=Arima(dif_ori2, order=c(2,1,3),method="ML")
summary(model3.db) #AIC=4559.59
lmtest::coeftest(model3.db) #seluruh parameter signifikan
model3.db=Arima(dif_ori2, order=c(2,1,3),method="ML")
summary(model3.db) #AIC=4495.33
lmtest::coeftest(model3.db) #Tidak ada parameter yang signifikan
model3.db=Arima(dif_ori2, order=c(2,1,3),method="ML")
summary(model3.db) #AIC=4495.33
lmtest::coeftest(model3.db) #Tidak ada parameter yang signifikan
model3.db=Arima(dif_ori2, order=c(2,1,3),method="ML")
summary(model3.db) #AIC=4495.33
lmtest::coeftest(model3.db) #Tidak ada parameter yang signifikan
model4.of=Arima(dif_ori2, order=c(4,1,0),method="ML")
summary(model2.db) #AIC=4559.59
lmtest::coeftest(model4.of) #seluruh parameter signifikan
model4.of=Arima(dif_ori2, order=c(4,1,0),method="ML")
summary(model2.of) #AIC=4559.59
lmtest::coeftest(model4.of) #seluruh parameter signifikan
model4.of=Arima(dif_ori2, order=c(4,1,0),method="ML")
summary(model4.of) #AIC=4559.59
lmtest::coeftest(model4.of) #seluruh parameter signifikan
model5.of=Arima(dif_ori2, order=c(3,1,1),method="ML")
summary(model5.of) #AIC=4559.59
lmtest::coeftest(model5.of) #seluruh parameter signifikan
#Eksplorasi
sisaan.da <- model5.of$residuals
par(mfrow=c(2,2))
qqnorm(sisaan.da)
qqline(sisaan.da, col = "blue", lwd = 2)
plot(c(1:length(sisaan.da)),sisaan.da)
acf(sisaan.da)
pacf(sisaan.da)
par(mfrow = c(1,1))
#1) Sisaan Menyebar Normal
ks.test(sisaan.da,"pnorm")  #tak tolak H0 > sisaan menyebar normal
#2) Sisaan saling bebas/tidak ada autokorelasi
Box.test(sisaan.da, type = "Ljung")  #tak tolak H0 > sisaan saling bebas
#3) Sisaan homogen
Box.test((sisaan.da)^2, type = "Ljung")  #tak tolak H0 > sisaan homogen
#4) Nilai tengah sisaan sama dengan nol
t.test(sisaan.da, mu = 0, conf.level = 0.95)  #tak tolak h0 > nilai tengah sisaan sama dengan 0
#4) Nilai tengah sisaan sama dengan nol
t.test(sisaan.da, mu = 0, conf.level = 0.95)  #tak tolak h0 > nilai tengah sisaan sama dengan 0
library(astsa)
library(dynlm) #time series regression
library(broom) #LM test
library(FinTS) #ARCH test
library(forecast)
library(tseries)
library(TTR)
library(TSA)
library(graphics)
library(portes)
library(tseries)
library(car)
library(rugarch)
library(ggplot2)
library(tsibble)
library(tseries)
library(MASS)
library(forecast)
library(TSA)
library(TTR)
library(aTSA)
library(graphics)
library(rio)
library(grid)
library(gridExtra)
library(magrittr)
path="D:/Kuliah/Semester 5/MPDW/MPDW kelompok/MPDW/Data/"
dfasli=read.csv(paste(path, "marina_complete.csv", sep=""))
dfasli
dfasli.ts=ts(dfasli$y)
plot(dfasli.ts, main = "Data Sebelum Cleaning")
#10 hari terakhir
hari=10
temp1=-(hari*24)+length(dfasli$y)
temp=dfasli[temp1:length(dfasli$y),2]
temp.ts=ts(temp)
seasonplot(temp.ts,24,
main="Saham amazon 01/01/2006 - 01/01/2018",
xlab = "Jam ke-",
ylab = "Tinggi laut (cm)", col=rainbow(18),
year.labels=TRUE)
dfharavf=read.csv(paste(path, "Harian/Rata Harian.csv", sep=""))[,2:3]
dfharavf.ts=ts(dfharavf$Rataan.Ketinggian.Air.Laut)
plot(dfharavf.ts, main = "Data Sebelum Cleaning")
# FIX Ini!
#15 Bulan terakhir
Bulan=15
temp=-(Bulan*30-1)+length(dfharavf$Rataan.Ketinggian.Air.Laut)
temp
df=dfharavf[temp:length(dfharavf$Rataan.Ketinggian.Air.Laut),]
df$Tanggal=seq(1,length(df$Rataan.Ketinggian.Air.Laut))
colnames(df)=c("periode", "rataan ketinggian air laut")
# FIX Ini!
#15 Bulan terakhir
Bulan=15
temp=-(Bulan*30-1)+length(dfharavf$Rataan.Ketinggian.Air.Laut)
temp
df=dfharavf[temp:length(dfharavf$Rataan.Ketinggian.Air.Laut),]
df$Tanggal=seq(1,length(df$Rataan.Ketinggian.Air.Laut))
colnames(df)=c("periode", "rataan ketinggian air laut")
# FIX Ini!
#15 Bulan terakhir
Bulan=15
temp=-(Bulan*30-1)+length(dfharavf$Rataan.Ketinggian.Air.Laut)
temp
df=dfharavf[temp:length(dfharavf$Rataan.Ketinggian.Air.Laut),]
df$Tanggal=seq(1,length(df$Rataan.Ketinggian.Air.Laut))
colnames(df)=c("periode", "rataan ketinggian air laut")
# FIX Ini!
#15 Bulan terakhir
Bulan=15
temp=-(Bulan*30-1)+length(dfharavf$Rataan.Ketinggian.Air.Laut)
temp
df=dfharavf[temp:length(dfharavf$Rataan.Ketinggian.Air.Laut),]
df$Tanggal=seq(1,length(df$Rataan.Ketinggian.Air.Laut))
colnames(df)=c("periode", "rataan ketinggian air laut")
# FIX Ini!
#15 Bulan terakhir
Bulan=15
temp=-(Bulan*30-1)+length(dfharavf$Rataan.Ketinggian.Air.Laut)
temp
df=dfharavf[temp:length(dfharavf$Rataan.Ketinggian.Air.Laut),]
df$Tanggal=seq(1,length(df$Rataan.Ketinggian.Air.Laut))
colnames(df)=c("periode", "rataan ketinggian air laut")
# FIX Ini!
#15 Bulan terakhir
Bulan=15
temp=-(Bulan*30-1)+length(dfharavf$Rataan.Ketinggian.Air.Laut)
temp
df=dfharavf[temp:length(dfharavf$Rataan.Ketinggian.Air.Laut),]
df$Tanggal=seq(1,length(df$Rataan.Ketinggian.Air.Laut))
colnames(df)=c("periode", "rataan ketinggian air laut")
# FIX Ini!
#15 Bulan terakhir
Bulan=15
temp=-(Bulan*30-1)+length(dfharavf$Rataan.Ketinggian.Air.Laut)
temp
df=dfharavf[temp:length(dfharavf$Rataan.Ketinggian.Air.Laut),]
df$Tanggal=seq(1,length(df$Rataan.Ketinggian.Air.Laut))
colnames(df)=c("periode", "rataan ketinggian air laut")
# FIX Ini!
#15 Bulan terakhir
Bulan=15
temp=-(Bulan*30-1)+length(dfharavf$Rataan.Ketinggian.Air.Laut)
temp
df=dfharavf[temp:length(dfharavf$Rataan.Ketinggian.Air.Laut),]
df$Tanggal=seq(1,length(df$Rataan.Ketinggian.Air.Laut))
colnames(df)=c("periode", "rataan ketinggian air laut")
# FIX Ini!
#15 Bulan terakhir
Bulan=15
temp=-(Bulan*30-1)+length(dfharavf$Rataan.Ketinggian.Air.Laut)
temp
df=dfharavf[temp:length(dfharavf$Rataan.Ketinggian.Air.Laut),]
df$Tanggal=seq(1,length(df$Rataan.Ketinggian.Air.Laut))
colnames(df)=c("periode", "rataan ketinggian air laut")
# FIX Ini!
#15 Bulan terakhir
Bulan=15
temp=-(Bulan*30-1)+length(dfharavf$Rataan.Ketinggian.Air.Laut)
temp
df=dfharavf[temp:length(dfharavf$Rataan.Ketinggian.Air.Laut),]
df$Tanggal=seq(1,length(df$Rataan.Ketinggian.Air.Laut))
colnames(df)=c("periode", "rataan ketinggian air laut")
# FIX Ini!
#15 Bulan terakhir
Bulan=15
temp=-(Bulan*30-1)+length(dfharavf$Rataan.Ketinggian.Air.Laut)
temp
df=dfharavf[temp:length(dfharavf$Rataan.Ketinggian.Air.Laut),]
df$Tanggal=seq(1,length(df$Rataan.Ketinggian.Air.Laut))
colnames(df)=c("periode", "rataan ketinggian air laut")
# FIX Ini!
#15 Bulan terakhir
Bulan=15
temp=-(Bulan*30-1)+length(dfharavf$Rataan.Ketinggian.Air.Laut)
temp
df=dfharavf[temp:length(dfharavf$Rataan.Ketinggian.Air.Laut),]
df$Tanggal=seq(1,length(df$Rataan.Ketinggian.Air.Laut))
colnames(df)=c("periode", "rataan ketinggian air laut")
df
length(df)
length(df$`rataan ketinggian air laut`)
df
library(astsa)
library(dynlm) #time series regression
library(broom) #LM test
library(FinTS) #ARCH test
library(forecast)
library(tseries)
library(TTR)
library(TSA)
library(graphics)
library(portes)
library(tseries)
library(car)
library(rugarch)
library(ggplot2)
library(tsibble)
library(tseries)
library(MASS)
library(forecast)
library(TSA)
library(TTR)
library(aTSA)
library(graphics)
library(rio)
library(grid)
library(gridExtra)
library(magrittr)
path="D:/Kuliah/Semester 5/MPDW/MPDW kelompok/MPDW/Data/"
dfasli=read.csv(paste(path, "marina_complete.csv", sep=""))
dfasli
dfasli.ts=ts(dfasli$y)
plot(dfasli.ts, main = "Data Sebelum Cleaning")
dfasli.ts=ts(dfasli$y)
plot(dfasli.ts, main = "Data Sebelum Cleaning")
seasonplot(temp.ts,24,
xlab = "Jam ke-",
ylab = "Tinggi laut (cm)", col=rainbow(18),
year.labels=TRUE)
seasonplot(temp.ts,24,
xlab = "Jam ke-",
ylab = "Tinggi laut (cm)", col=rainbow(18),
year.labels=TRUE)
dfasli.ts=ts(dfasli$y)
plot(dfasli.ts, main = "Data Sebelum Cleaning")
#10 hari terakhir
hari=10
temp1=-(hari*24)+length(dfasli$y)
temp=dfasli[temp1:length(dfasli$y),2]
temp.ts=ts(temp)
seasonplot(temp.ts,24,
xlab = "Jam ke-",
ylab = "Tinggi laut (cm)", col=rainbow(18),
year.labels=TRUE)
dfasli[-1]
dfasli
temp.ts=ts(temp)
plot(temp.ts)
seasonplot(temp.ts,24,
xlab = "Jam ke-",
ylab = "Tinggi laut (cm)", col=rainbow(18),
year.labels=TRUE)
len(dfharavf.ts)
dfharavf=read.csv(paste(path, "Harian/Rata Harian.csv", sep=""))[,2:3]
dfharavf.ts=ts(dfharavf$Rataan.Ketinggian.Air.Laut)
length(dfharavf.ts)
plot(dfharavf.ts, main = "Data Sebelum Cleaning")
seasonplot(df.ts,30,
main="Tambah Judul",
xlab = "Hari ke-",
ylab = "Tinggi laut (cm)", col=rainbow(18),
year.labels=TRUE)
df.ts=ts(df)
df.ts=ts(df)
df
dfharavf=read.csv(paste(path, "Harian/Rata Harian.csv", sep=""))[,2:3]
dfharavf.ts=ts(dfharavf$Rataan.Ketinggian.Air.Laut)
length(dfharavf.ts)
plot(dfharavf.ts, main = "Data Sebelum Cleaning")
# FIX Ini!
#15 Bulan terakhir
Bulan=15
temp=-(Bulan*30-1)+length(dfharavf$Rataan.Ketinggian.Air.Laut)
temp
df=dfharavf[temp:length(dfharavf$Rataan.Ketinggian.Air.Laut),]
df$Tanggal=seq(1,length(df$Rataan.Ketinggian.Air.Laut))
colnames(df)=c("periode", "rataan ketinggian air laut")
dfharavf
df
df.ts=ts(df$`rataan ketinggian air laut`)
seasonplot(dfharavf,30,
main="Tambah Judul",
xlab = "Hari ke-",
ylab = "Tinggi laut (cm)", col=rainbow(18),
year.labels=TRUE)
seasonplot(df.ts,30,
main="Tambah Judul",
xlab = "Hari ke-",
ylab = "Tinggi laut (cm)", col=rainbow(18),
year.labels=TRUE)
plot(df.ts)
#points(df.ts)
abline(v=360.5, col="red", lty=3, lwd=1)
train=df[1:360,]
train.ts=ts(train$`rataan ketinggian air laut`)
test=df[361:length(df$`rataan ketinggian air laut`),]
test.ts=ts(test$`rataan ketinggian air laut`)
plot(train.ts)
plot(test.ts)
#Gabungan
ggplot() +
geom_line(data = train, aes(x = periode, y = `rataan ketinggian air laut`, col = "Train")) +
geom_line(data = test, aes(x = periode, y = `rataan ketinggian air laut`, col = "Test")) + labs(x = "Periode Waktu", y = "Tinggi Air", color = "Legend") +
scale_colour_manual(name="legend:", breaks = c("Train", "Test"),
values = c("blue", "red")) +
theme_bw() + theme(legend.position = "bottom", plot.caption = element_text(hjust=0.5, size=12))
acf(train.ts)
adf.test(train.ts)
acf(train.ts)
adf.test(train.ts)
#Box-Cox Plot
n=length(train.ts)
index <- seq(1:n) #Sampai periode terakhir data train
bc = boxcox(train.ts~index, lambda = seq(0,5,by=1))
#Nilai Rounded Lambda
lambda <- bc$x[which.max(bc$y)]
best.lambda = bc$x[which(bc$y==max(bc$y))]
best.lambda
#SK
bc$x[bc$y > max(bc$y) - 1/2 * qchisq(.95,1)]
dif_ori <- diff(train.ts^2, differences = 1)
plot(dif_ori, ylab = "dif2BoxCox")
dif_ori2 <- diff(train.ts, differences = 1)
acf(dif_ori2)
dif_ori2 <- dif_ori2^2
plot(dif_ori2, ylab = "dif2BoxCox")
acf(dif_ori2)
pacf(dif_ori2)
acf(dif_ori) #ARIMA(0,1,1)
pacf(dif_ori) #ARIMA(1,1,0)
eacf(dif_ori)
model1.da=Arima(dif_ori, order=c(0,1,1),method="ML")
summary(model1.da) #AIC=6558.37
lmtest::coeftest(model1.da) #seluruh parameter signifikan
model2.da=Arima(dif_ori, order=c(1,1,0),method="ML")
summary(model2.da) #AIC=6723.63
lmtest::coeftest(model2.da) #seluruh parameter signifikan
model1.of=Arima(dif_ori, order=c(1,1,1),method="ML")
summary(model1.of) #AIC=6530.72
lmtest::coeftest(model1.of) #Seluruh parameter signifikan
model2.of=Arima(dif_ori, order=c(0,1,2),method="ML")
summary(model2.of) #AIC=6525.42
lmtest::coeftest(model2.of) #Seluruh parameter signifikan
#Eksplorasi
sisaan.da <- model2.of$residuals
par(mfrow=c(2,2))
qqnorm(sisaan.da)
qqline(sisaan.da, col = "blue", lwd = 2)
plot(c(1:length(sisaan.da)),sisaan.da)
acf(sisaan.da)
pacf(sisaan.da)
par(mfrow = c(1,1))
#1) Sisaan Menyebar Normal
ks.test(sisaan.da,"pnorm")  #tak tolak H0 > sisaan menyebar normal
#2) Sisaan saling bebas/tidak ada autokorelasi
Box.test(sisaan.da, type = "Ljung")  #tak tolak H0 > sisaan saling bebas
#3) Sisaan homogen
Box.test((sisaan.da)^2, type = "Ljung")  #tak tolak H0 > sisaan homogen
#4) Nilai tengah sisaan sama dengan nol
t.test(sisaan.da, mu = 0, conf.level = 0.95)  #tak tolak h0 > nilai tengah sisaan sama dengan 0
acf(dif_ori2) #ARIMA(0,1,1)
pacf(dif_ori2) #ARIMA(3,1,0)
eacf(dif_ori2) #ARIMA(2,1,3)
model1.db=Arima(dif_ori2, order=c(0,1,1),method="ML")
summary(model1.db) #AIC=4584.37
lmtest::coeftest(model1.db) #seluruh parameter signifikan
